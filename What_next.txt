WHAT NEXT????
-------------

Known BUGS:
===========

The overall structure seems vastly overcomplicated!
Colour > DNA > Colour etc. SIMPLIFY IT!

With the inclusion of a "variance %" or "Strain diversity%" there should be sufficient variation without the need for Max/Min limits on each colour parameter.
Variance is a (upto random X% modifier) across all color parameters (or even a global variance?) Maybe one "variance%" per menu?

this.cellStartSize = lerp(cellStartSize_, (cellStartSize_ * map(this.dna.genes[1], 0, 1, 0.8, 1.0)), p.variance*0.01)

Variance is used to determine the fader-position in a LERP from (original value) to (value +/- variance)
I want:
One slider per variable to determine the 'middle value'
One 'variance' to determine the amount of 'random variation' around that value, which could be 100% upto 200% (x2) or (*0.5/*2.0) or +/- 50%
+ 100% = x2
- 100% = *0.5
Variance will apply to all variables in 'DNA tweaks': startsize/endsize/lifespan/noise/twist/transparency?

Suspected BUGS: (needs investigation)
=====================================


Possible IMPROVEMENTS:
=======================

- this.remoteness : Is it actually needed, or is this.maturity (mapped to range) sufficient?
- gs.stepped - Is it needed, or is this covered by stepSize = 0? Should it be true to start with?
  I think I have fixed it now so it never becomes false, and all is running normally
  Remove at a later stage (in a fork)

- Better alternative for Max/Min in GUI? Typed values?

- GUI folders for DNA overrides
  > Overrides could be 1-9) Setting value 0) "Diversity" "Variance" - scaling value for all DNA?
  Would reduce the need for both Max & Min variables too :-)
  Like http://rik-brown.github.io/Cellendipity/

- Look at aybe_sea - it runs smooth, the GUI is not over-complex. Could I just rebuild that to make a 'mandala' pattern?
- It has a nice 'randomize on restart' function

- TIDYING: Order variables in the same sequence in gs, dat.gui & randomize. GUI is master?
- Align value ranges in gs, dat.gui & randomize()


REMEMBER! Scaling is important: use relative sizes IMPORTANT!!
REMEMBER! populateColony() does not refresh Global_settings!!

- If stepped, stepSizeN = stepSize

Ideas for NEW FEATURES:
=======================
+ Instead of specifying individual Strain colors, specify ANGULAR HUE OFFSET between strains?
If (key = '1') {gs = new Global_settings_1}
If (key = '2') {gs = new Global_settings_2}
If (key = '3') {gs = new Global_settings_3}
If (key = '4') {gs = new Global_settings_4}
To select a predefined set of global_settings

TASKS:
======

- Decide on new TITLE in html Cellendipity Composer?
- Instructions? .txt or on-screen text()? (did I make this already?)

- Naming convention - what is this generator called?

How to go on from here towards being able to use the GUI to tweak the generators (& save presets to JSON?)

This could potentially run as a standalone at Tomra....
